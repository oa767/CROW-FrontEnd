{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './chatroom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chatroom() {\n  _s();\n\n  const roomName = localStorage.getItem('roomName');\n  const username = localStorage.getItem('username');\n  const roomCode = localStorage.getItem('roomCode');\n  const [users, setUsers] = useState(undefined);\n\n  const joinRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/join/${roomCode}/${username}`).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const getUsersList = () => {\n    axios.get(`https://crow249.herokuapp.com/rooms/list`).then(response => {\n      for (var i = 0; i < response.data.length; i++) {\n        if (response.data[i]._id.$oid == roomCode) {\n          setUsers(response.data[i].list_users);\n        }\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    joinRoom();\n    getUsersList();\n    console.log(users);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topBar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomName\",\n          children: [\" \", roomName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 2\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebarContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", username, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" User 2 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chatInput\",\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatWindow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chatroom, \"h73jw40L4V+jSml6oPkk+RJ1Eus=\");\n\n_c = Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx"],"names":["React","useState","useEffect","axios","Chatroom","roomName","localStorage","getItem","username","roomCode","users","setUsers","undefined","joinRoom","post","then","response","console","log","catch","error","getUsersList","get","i","data","length","_id","$oid","list_users"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,QAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,QAAME,QAAQ,GAAGH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACW,SAAD,CAAlC;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBV,IAAAA,KAAK,CAACW,IAAN,CAAY,4CAA2CL,QAAS,IAAGD,QAAS,EAA5E,EACGO,IADH,CACSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAHH,EAIGG,KAJH,CAISC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KANH;AAOD,GARD;;AAUA,QAAMC,YAAY,GAAG,MAAM;AACzBlB,IAAAA,KAAK,CAACmB,GAAN,CAAW,0CAAX,EACGP,IADH,CACSC,QAAD,IAAc;AACzB,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,QAAQ,CAACQ,IAAT,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;AAC7C,YAAIP,QAAQ,CAACQ,IAAT,CAAcD,CAAd,EAAiBG,GAAjB,CAAqBC,IAArB,IAA6BlB,QAAjC,EAA2C;AACzCE,UAAAA,QAAQ,CAACK,QAAQ,CAACQ,IAAT,CAAcD,CAAd,EAAiBK,UAAlB,CAAR;AACD;AACF;AACK,KAPH,EAQGT,KARH,CAQSC,KAAK,IAAI;AACrBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACM,KAVH;AAWD,GAZD;;AAcAlB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ;AACRQ,IAAAA,YAAY;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACL;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,0BAA4BL,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACL;AAAA,0BAAMG,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBADK,eAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAYE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE;AACL,QAAA,SAAS,EAAC,WADL;AAEE,QAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAkBE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAsBD;;GA3DuBJ,Q;;KAAAA,Q","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport './chatroom.css';\n\nexport default function Chatroom() { \n  const roomName = localStorage.getItem('roomName');\n  const username = localStorage.getItem('username');\n  const roomCode = localStorage.getItem('roomCode');\n\n  const [users, setUsers] = useState(undefined);\n\n  const joinRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/join/${roomCode}/${username}`)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  const getUsersList = () => {\n    axios.get(`https://crow249.herokuapp.com/rooms/list`)\n      .then((response) => {\n\tfor (var i = 0; i < response.data.length; i++) {\n\t  if (response.data[i]._id.$oid == roomCode) {\n\t    setUsers(response.data[i].list_users);\n\t  }\n\t}\n      })\n      .catch(error => {\n\tconsole.log(error);\n      })\n  }\n\n  useEffect(() => {\n    joinRoom();\n    getUsersList();\n    console.log(users);\n  }, []);\n\n  return (\n    <>\n      <div className=\"wrapper\">\n\t<div className=\"topBar\">\n\t  <div className=\"roomName\"> {roomName} </div>\n\t</div>\n      </div>\n      <div className=\"sidebar\">\n        <div className=\"sidebarContent\">\n\t  <h3> {username} </h3>\n\t  <h3> User 2 </h3>\n\t</div>\n      </div>\n      <div className=\"chatbar\">\n        <input\n\t  className=\"chatInput\"\n          placeholder=\"Type a message\"\n        />\n      </div>\n      <div className=\"chatWindow\"></div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}