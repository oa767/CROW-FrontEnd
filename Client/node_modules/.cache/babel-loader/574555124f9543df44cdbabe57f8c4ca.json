{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Usernames/Usernames.jsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport './usernames.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Username() {\n  _s();\n\n  const history = useHistory();\n\n  function navigateToPage(path) {\n    history.push(path);\n  }\n\n  const leftUsernames = [\"<button className=username-item>Default #1</button>\", \"Default #2\", \"Default #3\", \"Default #4\", \"Default #5\"];\n  const rightUsernames = [\"Default #6\", \"Default #7\", \"Default #8\", \"Default #9\", \"Default #10\"];\n\n  function makeButtons(arr, divID) {\n    for (var i = 0; i < arr.length; ++i) {\n      divID.append('<button className=\"username-item\">' + arr[i] + '</button>');\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n\n    /* Users on the website can select from a set of 10 different usernames \n    before entering a room. If a user does not select a name before entering \n    a room the website should give them a random one from this set of names. \n    The random user name that is selected must be unique from all other users\n    in the chatroom.\n    \t*/\n    _jsxDEV(\"div\", {\n      className: \"wrapper user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Choose a username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content user\",\n          id: \"id1\",\n          children: \"leftUsernames\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  );\n  const listDivs = document.getElementsByClassName(\"content user\");\n  let stuff = \"<h1> HELLO! </h1>\";\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n\n  for (var i = 0; i < listDivs.length; ++i) {\n    makeButtons(leftUsernames, listDivs[i]);\n  }\n\n  var first = document.getElementById('id1');\n  first.append('<button className=\"username-item\">' + leftUsernames[0] + '</button>');\n}\n\n_s(Username, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Username;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Username\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Usernames/Usernames.jsx"],"names":["useHistory","ReactDOM","React","Username","history","navigateToPage","path","push","leftUsernames","rightUsernames","makeButtons","arr","divID","i","length","append","listDivs","document","getElementsByClassName","stuff","render","getElementById","first"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAEA,WAASK,cAAT,CAAwBC,IAAxB,EAA8B;AAC5BF,IAAAA,OAAO,CAACG,IAAR,CAAaD,IAAb;AACD;;AAED,QAAME,aAAa,GAAG,CAAC,qDAAD,EAAwD,YAAxD,EAAsE,YAAtE,EAAoF,YAApF,EAAkG,YAAlG,CAAtB;AACA,QAAMC,cAAc,GAAG,CAAC,YAAD,EAAe,YAAf,EAA6B,YAA7B,EAA2C,YAA3C,EAAyD,aAAzD,CAAvB;;AAEA,WAASC,WAAT,CAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AAC/B,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgC,EAAED,CAAlC,EAAqC;AACnCD,MAAAA,KAAK,CAACG,MAAN,CAAa,uCAAuCJ,GAAG,CAACE,CAAD,CAA1C,GAAgD,WAA7D;AACD;AACF;;AACD;AAAA;;AACC;AACH;AACA;AACA;AACA;AACA;AACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAA8B,UAAA,EAAE,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAmBA,QAAMG,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,CAAjB;AACA,MAAIC,KAAK,GAAG,mBAAZ;AACAlB,EAAAA,QAAQ,CAACmB,MAAT,eAAgB;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAhB,EAAiDH,QAAQ,CAACI,cAAT,CAAwB,MAAxB,CAAjD;;AACA,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,QAAQ,CAACF,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;AACxCH,IAAAA,WAAW,CAACF,aAAD,EAAgBQ,QAAQ,CAACH,CAAD,CAAxB,CAAX;AACD;;AACD,MAAIS,KAAK,GAAGL,QAAQ,CAACI,cAAT,CAAwB,KAAxB,CAAZ;AACAC,EAAAA,KAAK,CAACP,MAAN,CAAa,uCAAuCP,aAAa,CAAC,CAAD,CAApD,GAA0D,WAAvE;AAED;;GA3CuBL,Q;UACNH,U;;;KADMG,Q;AA2CvB","sourcesContent":["import {useHistory} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport './usernames.css';\n\nexport default function Username() {\n  const history = useHistory();\n\n  function navigateToPage(path) {\n    history.push(path);\n  }\n\n  const leftUsernames = [\"<button className=username-item>Default #1</button>\", \"Default #2\", \"Default #3\", \"Default #4\", \"Default #5\"];\n  const rightUsernames = [\"Default #6\", \"Default #7\", \"Default #8\", \"Default #9\", \"Default #10\"];\n  \n  function makeButtons(arr, divID) {\n    for (var i = 0; i < arr.length; ++i) {\n      divID.append('<button className=\"username-item\">' + arr[i] + '</button>');\n    }\n  }\n  return (\n\t  /* Users on the website can select from a set of 10 different usernames \n\t  before entering a room. If a user does not select a name before entering \n\t  a room the website should give them a random one from this set of names. \n\t  The random user name that is selected must be unique from all other users\n\t  in the chatroom.\n\t  \t*/\n    <div className=\"wrapper user\">\n      <div className=\"wrapper title\">\n        <h3> Choose a username </h3>\n      </div>\n      <div className=\"listWrapper\">\n        <div className=\"content user\" id=\"id1\">\n\t  leftUsernames\n\t</div>\n        <div className=\"content user\"></div>\n      </div>\n    </div>\n  );\n  const listDivs = document.getElementsByClassName(\"content user\");\n  let stuff = \"<h1> HELLO! </h1>\";\n  ReactDOM.render(<div className=\"content\"></div>, document.getElementById('root'));\n  for (var i = 0; i < listDivs.length; ++i) {\n    makeButtons(leftUsernames, listDivs[i]);\n  }\n  var first = document.getElementById('id1');\n  first.append('<button className=\"username-item\">' + leftUsernames[0] + '</button>');\n  \n};\n"]},"metadata":{},"sourceType":"module"}