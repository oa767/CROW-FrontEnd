{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const history = useHistory();\n\n  function navigateToPage(path) {\n    history.push(path);\n  }\n\n  const [rooms, setRooms] = useState(undefined);\n  const [error, setError] = useState(undefined);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [roomName, setRoomName] = useState('');\n  const [username, setUsername] = useState('');\n\n  const handleCreateRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/create/${roomName}`).then(() => {\n      localStorage.setItem('roomName', roomName);\n    }).catch(error => {\n      setError(error);\n      console.log(error);\n    });\n    axios.post(`https://crow249.herokuapp.com/users/create/${username}`).then(() => {\n      localStorage.setItem('username', username);\n    }).catch(error => {\n      setError(error);\n      console.log(error);\n    });\n    axios.get('https://crow249.herokuapp.com/rooms/list').then(response => {\n      console.log(response);\n\n      if (response.data) {\n        setRooms(response.data);\n      }\n    }).catch(error => {\n      console.log(error);\n      setError(error);\n    });\n    let roomCode = rooms[rooms.length - 1]._id.$oid;\n    axios.post(`https://crow249.herokuapp.com/rooms/join/${roomCode}/${username}`).then(() => {\n      localStorage.setItem('roomcode', roomCode);\n    }).catch(error => {\n      console.log(error);\n      setError(error);\n    });\n    setIsModalOpen(false);\n    navigateToPage('/chatroom');\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /* The home page has 4 key functions as the introduction to the website\n    1. It shows users  a list of chat rooms that they can join, center of the screen\t\n    2. It gives them an option to create their own room, sidebar\n    3. It gives them an option to create a private room, sidebar\n    4. It shows them a list of user names they can choose from before entering any room.\n     */\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topBar\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsModalOpen(true),\n            className: \"privateRoomButton\",\n            children: \"Create a Private Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content homepage\",\n          children: [isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createRoomModal\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"roomNameInput\",\n              placeholder: \"Room Name\",\n              value: roomName,\n              onChange: e => setRoomName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"usernameInput\",\n              placeholder: \"Username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: handleCreateRoom,\n                children: \"Create Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                onClick: () => setIsModalOpen(false),\n                children: \" Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" CROW Chat \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigateToPage('/usernameChoice'),\n            className: \"page-button home\",\n            children: \"Join a Random Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigateToPage('/rooms'),\n            className: \"page-button home\",\n            children: \"View All Rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigateToPage('/users'),\n            className: \"page-button home\",\n            children: \"View All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(Home, \"BCBvjUnMKcVuPxPL//JnwTP+GFY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Home/Home.jsx"],"names":["React","useState","useHistory","axios","Home","history","navigateToPage","path","push","rooms","setRooms","undefined","error","setError","isModalOpen","setIsModalOpen","roomName","setRoomName","username","setUsername","handleCreateRoom","post","then","localStorage","setItem","catch","console","log","get","response","data","roomCode","length","_id","$oid","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport axios from 'axios';\n\nimport './home.css';\n\nexport default function Home(){\n  const history = useHistory();\n\n  function navigateToPage(path) {\n    history.push(path);\n  }\n\n  const [rooms, setRooms] = useState(undefined);\n  const [error, setError] = useState(undefined);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [roomName, setRoomName] = useState('');\n  const [username, setUsername] = useState('');\n\n  const handleCreateRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/create/${roomName}`)\n      .then(() => {\n        localStorage.setItem('roomName', roomName);\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n      })\n    axios.post(`https://crow249.herokuapp.com/users/create/${username}`)\n      .then(() => {\n\tlocalStorage.setItem('username', username);\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n      })\n    axios.get('https://crow249.herokuapp.com/rooms/list')\n      .then((response) => {\n        console.log(response);\n\tif (response.data){\n          setRooms(response.data);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error);\n      });\n\n    let roomCode = rooms[rooms.length - 1]._id.$oid;\n    axios.post(`https://crow249.herokuapp.com/rooms/join/${roomCode}/${username}`)\n      .then(() => {\n        localStorage.setItem('roomcode', roomCode);\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error);\n      });\n    \n    setIsModalOpen(false);\n    navigateToPage('/chatroom');\n  }\n\n  return (\n\t  /* The home page has 4 key functions as the introduction to the website\n\t\t1. It shows users  a list of chat rooms that they can join, center of the screen\t\n\t\t2. It gives them an option to create their own room, sidebar\n\t\t3. It gives them an option to create a private room, sidebar\n\t\t4. It shows them a list of user names they can choose from before entering any room.\n\t\t\t */\n    <>\n      <div className=\"wrapper\">\n        <div className=\"topBar\">\n          <button \n\t    onClick={() => setIsModalOpen(true)}\n\t    className=\"privateRoomButton\"\n\t  >\n            Create a Private Room\n          </button>\n        </div>\n      </div>\n      <div className=\"wrapper\">\n        <div className=\"content homepage\">\n          {isModalOpen &&\n            <div className=\"createRoomModal\">\n              <input\n                className=\"roomNameInput\"\n                placeholder=\"Room Name\"\n                value={roomName}\n                onChange={(e) => setRoomName(e.target.value)}\n              />\n\t      <input\n\t\tclassName=\"usernameInput\"\n\t\tplaceholder=\"Username\"\n\t\tvalue={username}\n\t\tonChange={(e) => setUsername(e.target.value)}\n\t      />\n              <div className=\"create-actions\">\n                <button className=\"button\" onClick={handleCreateRoom}>Create Room</button>\n                <button className=\"button\" onClick={() => setIsModalOpen(false)}> Cancel</button>\n              </div>\n            </div>\n          }\n          <h1> CROW Chat </h1>\n          <button\n\t    onClick={() => navigateToPage('/usernameChoice')}\n\t    className=\"page-button home\"\n          >\n\t    Join a Random Room\n          </button>\n          <button\n            onClick={() => navigateToPage('/rooms')}\n            className=\"page-button home\"\n          >\n            View All Rooms\n          </button>\n          <button\n            onClick={() => navigateToPage('/users')}\n            className=\"page-button home\"\n          >\n            View All Users\n          </button> \n        </div>\n      </div>\n    </>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}