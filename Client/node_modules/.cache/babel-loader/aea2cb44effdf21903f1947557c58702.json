{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport './chatroom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chatroom() {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const roomID = params.roomID;\n  const username = sessionStorage.getItem('username');\n  const [data, setData] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useState(JSON.parse(sessionStorage.getItem('privateRoom')));\n  const [isNewUser, setIsNewUser] = useState(JSON.parse(sessionStorage.getItem('newUser')));\n  const [isNewRoom, setIsNewRoom] = useState(true);\n  var socket;\n\n  const joinRoom = async () => {\n    if (isPrivate && isNewUser && isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`).then(response => {\n        console.log(response.data);\n        setIsNewUser(false);\n        sessionStorage.setItem('newUser', false);\n        setIsNewRoom(false);\n        socket = io();\n      }).catch(error => {\n        console.log(error);\n      });\n    } else if (isPrivate && isNewUser && !isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`).then(response => {\n        console.log(response.data);\n        setIsNewUser(false);\n        sessionStorage.setItem('newUser', false);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const getRoomData = async () => {\n    await axios.get('https://crow249.herokuapp.com/rooms/list').then(response => {\n      for (var i = 0; i < response.data.length; ++i) {\n        if (response.data[i]._id.$oid == roomID) {\n          setData(response.data[i]);\n          /*console.log(response.data[i]);*/\n\n          setIsLoading(false);\n        }\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    joinRoom();\n    getRoomData();\n    const interval = setInterval(() => {\n      getRoomData();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content chatroom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topBarContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"topBarTitle chatroom\",\n            onClick: () => history.push('/'),\n            children: \"Crow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomName\",\n            children: [\" \", data.room_name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 8\n          }, this), isPrivate && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomCode\",\n            children: [\" \", data._id.$oid, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 22\n          }, this), !isPrivate && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomCode\",\n            style: {\n              width: \"42.6vmin\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content chatBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sideBarContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sidebarContent\",\n              children: data.list_users ? data.list_users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", user, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this)\n              }, `${user}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatWindow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatbar\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"chatInput\",\n              placeholder: \"Type a message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chatroom, \"UyJk0grFRrptGA+MirJ8fHRLXNM=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx"],"names":["React","useState","useEffect","axios","useHistory","useParams","io","Chatroom","history","params","roomID","username","sessionStorage","getItem","data","setData","undefined","isLoading","setIsLoading","isPrivate","setIsPrivate","JSON","parse","isNewUser","setIsNewUser","isNewRoom","setIsNewRoom","socket","joinRoom","post","then","response","console","log","setItem","catch","error","getRoomData","get","i","length","_id","$oid","interval","setInterval","clearInterval","push","room_name","width","list_users","map","user","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useHistory, useParams} from 'react-router-dom';\nimport io from 'socket.io-client';\n\nimport './chatroom.css';\n\nexport default function Chatroom() { \n  const history = useHistory();\n  const params = useParams();\n  const roomID = params.roomID;\n\n  const username = sessionStorage.getItem('username');\n\n  const [data, setData] = useState(undefined);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useState(JSON.parse(sessionStorage.getItem('privateRoom')));\n  const [isNewUser, setIsNewUser] = useState(JSON.parse(sessionStorage.getItem('newUser')));\n  const [isNewRoom, setIsNewRoom] = useState(true);\n\n  var socket;\n\n  const joinRoom = async() => {\n    if (isPrivate && isNewUser && isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`)\n        .then((response) => {\n          console.log(response.data);\n\t  setIsNewUser(false);\n\t  sessionStorage.setItem('newUser', false);\n\t  setIsNewRoom(false);\n          socket = io();\n        })\n        .catch(error => {\n          console.log(error);\n        })\n    } else if (isPrivate && isNewUser && !isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`)\n        .then((response) => {\n          console.log(response.data);\n\t  setIsNewUser(false);\n          sessionStorage.setItem('newUser', false);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n    }\n  }\n  \n  const getRoomData = async() => {\n    await axios.get('https://crow249.herokuapp.com/rooms/list')\n      .then((response) => {\n\tfor (var i = 0; i < response.data.length; ++i) {\n          if (response.data[i]._id.$oid == roomID) {\n            setData(response.data[i]);\n            /*console.log(response.data[i]);*/\n            setIsLoading(false);\n          }\n        }\n      })\n      .catch(error => {\n\tconsole.log(error);\n      })\n  }\n\n  useEffect(() => {\n    joinRoom();\n    getRoomData();\n\n    const interval = setInterval(() => {\n      getRoomData();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      {!isLoading &&\n        <div className=\"content chatroom\">\n          <div className=\"topBarContainer\">\n            <div className=\"topBar\">\n              <button\n                className=\"topBarTitle chatroom\"\n                onClick={() => history.push('/')}\n              >\n                Crow\n              </button>\n\t      <div className=\"roomName\"> {data.room_name} </div>\n\t      {isPrivate && <div className=\"roomCode\"> {data._id.$oid} </div>}\n\t      {!isPrivate && <div className=\"roomCode\" style={{width: \"42.6vmin\"}}></div>}\n            </div>\n          </div>\n\t  <div className=\"content chatBody\">\n            <div className=\"sideBarContainer\">\n              <div className=\"sidebar\">\n                <div className=\"sidebarContent\">\n                  {data.list_users ? data.list_users.map((user, index) => (\n                    <div\n                      key={`${user}-${index}`}\n                    >\n                      <p> {user} </p>\n                    </div>\n                  )) : (\n                    <p></p>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"chatContainer\">\n              <div className=\"chatWindow\"></div>\n              <div className=\"chatbar\">\n                <input\n\t          className=\"chatInput\"\n                  placeholder=\"Type a message\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}