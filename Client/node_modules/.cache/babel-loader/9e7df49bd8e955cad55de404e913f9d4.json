{"ast":null,"code":"import _slicedToArray from\"/Users/randy/CROW-FrontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useHistory}from'react-router-dom';import React,{useState}from'react';import axios from'axios';import'./usernames.css';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Username(){var leftUsernames=[\"Crow\",\"Owl\",\"Raven\",\"Eagle\",\"Sparrow\"];var rightUsernames=[\"Penguin\",\"Flamingo\",\"Crane\",\"Hummingbird\",\"Dove\"];var history=useHistory();var roomCode=sessionStorage.getItem(\"roomCode\");var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),chosenName=_useState2[0],setChosenName=_useState2[1];var path='/chatroom/';var createUserJoinRoom=function createUserJoinRoom(){axios.post(\"https://crow249.herokuapp.com/users/create/\".concat(sessionStorage.getItem(\"username\"))).then(function(response){console.log(response.data);sessionStorage.setItem('privateRoom',false);sessionStorage.setItem('newUser',true);}).catch(function(error){console.log(error);});axios.post(\"https://crow249.herokuapp.com/rooms/join/\".concat(roomCode,\"/\").concat(sessionStorage.getItem(\"username\"))).then(function(response){console.log(response.data);console.log(path.concat(roomCode));sessionStorage.removeItem('roomCode');history.push(path.concat(roomCode));}).catch(function(error){console.log(error);});};return/*#__PURE__*/ (/* Users on the website can select from a set of 10 different usernames \n\t  before entering a room. If a user does not select a name before entering \n\t  a room the website should give them a random one from this set of names. \n\t  The random user name that is selected must be unique from all other users\n\t  in the chatroom.\n    \t  \t*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{paddingTop:\"150px\",paddingBottom:\"20px\"},children:/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return history.push('./');},className:\"button usernames\",children:[\"<--\",\"Go Back\"]})}),/*#__PURE__*/_jsx(\"h3\",{style:{color:\"white\",textAlign:\"center\"},children:\" Choose a Username \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"listContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"buttonContainer usernames\",children:leftUsernames.map(function(username){return/*#__PURE__*/_jsx(\"div\",{className:\"username-item\",onClick:function onClick(){console.log(username);sessionStorage.setItem(\"username\",username);createUserJoinRoom();},children:/*#__PURE__*/_jsxs(\"p\",{children:[\" \",username,\" \"]})},\"\".concat(username));})}),/*#__PURE__*/_jsx(\"div\",{className:\"buttonContainer usernames\",children:rightUsernames.map(function(username){return/*#__PURE__*/_jsx(\"div\",{className:\"username-item\",onClick:function onClick(){console.log(username);sessionStorage.setItem(\"username\",username);createUserJoinRoom();},children:/*#__PURE__*/_jsxs(\"p\",{children:[\" \",username,\" \"]})},\"\".concat(username));})})]})]}));};","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Usernames/Usernames.jsx"],"names":["useHistory","React","useState","axios","Username","leftUsernames","rightUsernames","history","roomCode","sessionStorage","getItem","undefined","chosenName","setChosenName","path","createUserJoinRoom","post","then","response","console","log","data","setItem","catch","error","concat","removeItem","push","paddingTop","paddingBottom","color","textAlign","map","username"],"mappings":"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","sourcesContent":["import {useHistory} from 'react-router-dom';\nimport React, {useState} from 'react';\nimport axios from 'axios';\n\nimport './usernames.css';\n\nexport default function Username() {\n  const leftUsernames = [\"Crow\", \"Owl\", \"Raven\", \"Eagle\", \"Sparrow\"];\n  const rightUsernames = [\"Penguin\", \"Flamingo\", \"Crane\", \"Hummingbird\", \"Dove\"];\n\n  const history = useHistory();\n\n  const roomCode = sessionStorage.getItem(\"roomCode\");\n  const [chosenName, setChosenName] = useState(undefined);\n\n  const path = '/chatroom/';\n\n  const createUserJoinRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/users/create/${sessionStorage.getItem(\"username\")}`)\n      .then((response) => {\n        console.log(response.data);\n        sessionStorage.setItem('privateRoom', false);\n        sessionStorage.setItem('newUser', true);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    axios.post(`https://crow249.herokuapp.com/rooms/join/${roomCode}/${sessionStorage.getItem(\"username\")}`)\n      .then((response) => {\n        console.log(response.data);\n        console.log(path.concat(roomCode));\n        sessionStorage.removeItem('roomCode');\n        history.push(path.concat(roomCode));\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  return (\n\t  /* Users on the website can select from a set of 10 different usernames \n\t  before entering a room. If a user does not select a name before entering \n\t  a room the website should give them a random one from this set of names. \n\t  The random user name that is selected must be unique from all other users\n\t  in the chatroom.\n    \t  \t*/\n    <>\n      <div style={{paddingTop: \"150px\", paddingBottom: \"20px\"}}>\n        <button\n          onClick={() => history.push('./')}\n          className=\"button usernames\"\n        >\n          {\"<--\"}Go Back\n        </button>\n      </div>\n\n      <h3 style={{color: \"white\", textAlign: \"center\"}}> Choose a Username </h3>\n\n      <div className=\"listContainer\">\n        <div className=\"buttonContainer usernames\">\n\t  {leftUsernames.map((username) => (\n\t    <div \n\t      className=\"username-item\"\n\t      key={`${username}`}\n\t      onClick={() => {\n\t\tconsole.log(username);\n \t\tsessionStorage.setItem(\"username\", username);\n\t\tcreateUserJoinRoom();\t\t\n\t      }}\n\t    >\n\t      <p> {username} </p>\n\t    </div>\n          ))}\n        </div>\t\n\t<div className=\"buttonContainer usernames\">\n          {rightUsernames.map((username) => (\n            <div\n              className=\"username-item\"\n              key={`${username}`}\n              onClick={() => {\n\t\tconsole.log(username);\n\t\tsessionStorage.setItem(\"username\", username);\n                createUserJoinRoom();\n              }}\n            >\n              <p> {username} </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}