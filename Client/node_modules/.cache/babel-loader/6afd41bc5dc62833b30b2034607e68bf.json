{"ast":null,"code":"import _asyncToGenerator from\"/Users/randy/CROW-FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/randy/CROW-FrontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/randy/CROW-FrontEnd/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import axios from'axios';import{useHistory,useParams}from'react-router-dom';import'./chatroom.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Chatroom(){var history=useHistory();var params=useParams();var roomID=params.roomID;var username=sessionStorage.getItem('username');var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(JSON.parse(sessionStorage.getItem('privateRoom'))),_useState6=_slicedToArray(_useState5,2),isPrivate=_useState6[0],setIsPrivate=_useState6[1];var _useState7=useState(JSON.parse(sessionStorage.getItem('newUser'))),_useState8=_slicedToArray(_useState7,2),isNewUser=_useState8[0],setIsNewUser=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),isNewRoom=_useState10[0],setIsNewRoom=_useState10[1];var joinRoom=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(isPrivate&&isNewUser&&isNewRoom)){_context.next=5;break;}_context.next=3;return axios.post(\"https://crow249.herokuapp.com/rooms/join/\".concat(roomID,\"/\").concat(username)).then(function(response){console.log(response.data);setIsNewUser(false);sessionStorage.setItem('newUser',false);setIsNewRoom(false);}).catch(function(error){console.log(error);});case 3:_context.next=8;break;case 5:if(!(isPrivate&&isNewUser&&!isNewRoom)){_context.next=8;break;}_context.next=8;return axios.post(\"https://crow249.herokuapp.com/rooms/join/\".concat(roomID,\"/\").concat(username)).then(function(response){console.log(response.data);setIsNewUser(false);sessionStorage.setItem('newUser',false);}).catch(function(error){console.log(error);});case 8:case\"end\":return _context.stop();}}},_callee);}));return function joinRoom(){return _ref.apply(this,arguments);};}();var getRoomData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('https://crow249.herokuapp.com/rooms/list').then(function(response){for(var i=0;i<response.data.length;++i){if(response.data[i]._id.$oid==roomID){setData(response.data[i]);/*console.log(response.data[i]);*/ /*console.log(response.data[i]);*/setIsLoading(false);}}}).catch(function(error){console.log(error);});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function getRoomData(){return _ref2.apply(this,arguments);};}();useEffect(function(){joinRoom();getRoomData();var interval=setInterval(function(){getRoomData();},1000);return function(){return clearInterval(interval);};},[]);return/*#__PURE__*/_jsx(_Fragment,{children:!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"content chatroom\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"topBarContainer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"topBar\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"topBarTitle chatroom\",onClick:function onClick(){return history.push('/');},children:\"Crow\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"roomName\",children:[\" \",data.room_name,\" \"]}),isPrivate&&/*#__PURE__*/_jsxs(\"div\",{className:\"roomCode\",children:[\" \",data._id.$oid,\" \"]}),!isPrivate&&/*#__PURE__*/_jsx(\"div\",{className:\"roomCode\",style:{width:\"42.6vmin\"}})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"content chatBody\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sideBarContainer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sidebar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sidebarContent\",children:data.list_users?data.list_users.map(function(user,index){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[\" \",user,\" \"]})},\"\".concat(user,\"-\").concat(index));}):/*#__PURE__*/_jsx(\"p\",{})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chatWindow\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chatbar\",children:/*#__PURE__*/_jsx(\"input\",{className:\"chatInput\",placeholder:\"Type a message\"})})]})]})]})});}","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx"],"names":["React","useState","useEffect","axios","useHistory","useParams","Chatroom","history","params","roomID","username","sessionStorage","getItem","undefined","data","setData","isLoading","setIsLoading","JSON","parse","isPrivate","setIsPrivate","isNewUser","setIsNewUser","isNewRoom","setIsNewRoom","joinRoom","post","then","response","console","log","setItem","catch","error","getRoomData","get","i","length","_id","$oid","interval","setInterval","clearInterval","push","room_name","width","list_users","map","user","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport './chatroom.css';\n\nexport default function Chatroom() { \n  const history = useHistory();\n  const params = useParams();\n  const roomID = params.roomID;\n\n  const username = sessionStorage.getItem('username');\n\n  const [data, setData] = useState(undefined);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useState(JSON.parse(sessionStorage.getItem('privateRoom')));\n  const [isNewUser, setIsNewUser] = useState(JSON.parse(sessionStorage.getItem('newUser')));\n  const [isNewRoom, setIsNewRoom] = useState(true);\n\n  const joinRoom = async() => {\n    if (isPrivate && isNewUser && isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`)\n        .then((response) => {\n          console.log(response.data);\n\t  setIsNewUser(false);\n\t  sessionStorage.setItem('newUser', false);\n\t  setIsNewRoom(false);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n    } else if (isPrivate && isNewUser && !isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`)\n        .then((response) => {\n          console.log(response.data);\n\t  setIsNewUser(false);\n          sessionStorage.setItem('newUser', false);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n    }\n  }\n  \n  const getRoomData = async() => {\n    await axios.get('https://crow249.herokuapp.com/rooms/list')\n      .then((response) => {\n\tfor (var i = 0; i < response.data.length; ++i) {\n          if (response.data[i]._id.$oid == roomID) {\n            setData(response.data[i]);\n            /*console.log(response.data[i]);*/\n            setIsLoading(false);\n          }\n        }\n      })\n      .catch(error => {\n\tconsole.log(error);\n      })\n  }\n\n  useEffect(() => {\n    joinRoom();\n    getRoomData();\n\n    const interval = setInterval(() => {\n      getRoomData();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n      {!isLoading &&\n        <div className=\"content chatroom\">\n          <div className=\"topBarContainer\">\n            <div className=\"topBar\">\n              <button\n                className=\"topBarTitle chatroom\"\n                onClick={() => history.push('/')}\n              >\n                Crow\n              </button>\n\t      <div className=\"roomName\"> {data.room_name} </div>\n\t      {isPrivate && <div className=\"roomCode\"> {data._id.$oid} </div>}\n\t      {!isPrivate && <div className=\"roomCode\" style={{width: \"42.6vmin\"}}></div>}\n            </div>\n          </div>\n\t  <div className=\"content chatBody\">\n            <div className=\"sideBarContainer\">\n              <div className=\"sidebar\">\n                <div className=\"sidebarContent\">\n                  {data.list_users ? data.list_users.map((user, index) => (\n                    <div\n                      key={`${user}-${index}`}\n                    >\n                      <p> {user} </p>\n                    </div>\n                  )) : (\n                    <p></p>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"chatContainer\">\n              <div className=\"chatWindow\"></div>\n              <div className=\"chatbar\">\n                <input\n\t          className=\"chatInput\"\n                  placeholder=\"Type a message\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}