{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Rooms/Rooms.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport RoomItem from '../../components/RoomItem/RoomItem';\nimport './rooms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Rooms() {\n  _s();\n\n  const [rooms, setRooms] = useState(undefined);\n  const [error, setError] = useState(undefined);\n  const [refresh, setRefresh] = useState(undefined);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isModifyOpen, setIsModifyOpen] = useState(false);\n  const [isUpdateOpen, setIsUpdateOpen] = useState(false);\n  const [newRoomName, setNewRoomName] = useState('');\n  const [roomToDelete, setRoomToDelete] = useState('');\n  const [roomToUpdate, setRoomToUpdate] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    axios.get('https://crow249.herokuapp.com/rooms/list').then(response => {\n      console.log(response.data);\n\n      if (response.data) {\n        setRooms(response.data);\n      }\n    }).catch(error => {\n      console.log(error);\n      setError(error);\n    });\n  }, [refresh]);\n\n  const handleCreateRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/create/${newRoomName}`).then(() => {\n      setIsModalOpen(false);\n      setRefresh(refresh + 1);\n    }).catch(error => {\n      setError(error);\n      console.log(error);\n    });\n  };\n\n  const handleDeleteRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/delete/${roomToDelete}`).then(() => {\n      setIsModifyOpen(false);\n      setRefresh(refresh + 1);\n    }).catch(error => {\n      setError(error);\n      console.log(error);\n    });\n  };\n\n  const handleChangeRoom = () => {\n    axios.put(`https://crow249.herokuapp.com/rooms/update/${roomToUpdate}/${newRoomName}`).then(() => {\n      setIsUpdateOpen(false);\n      setRefresh(refresh + 1);\n    }).catch(error => {\n      setError(error);\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push('/'),\n        className: \"button\",\n        children: [\"<--\", \"Go Back Home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-error-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-list\",\n      children: [isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"room-input\",\n          placeholder: \"Room Name\",\n          value: newRoomName,\n          onChange: e => setNewRoomName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleCreateRoom,\n            children: \"Create New Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => setIsModalOpen(false),\n            children: \" Cancel \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), isModifyOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleDeleteRoom,\n            children: \" Delete Room \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => {\n              setIsModifyOpen(false);\n              setIsUpdateOpen(true);\n            },\n            children: \"Change Room Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => setIsModifyOpen(false),\n            children: \" Cancel \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), isUpdateOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"room-input\",\n          placeholder: \"New Room Name\",\n          value: newRoomName,\n          onChange: e => setNewRoomName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleChangeRoom,\n            children: \" Update Room \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => setIsUpdateOpen(false),\n            children: \" Cancel \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 6\n      }, this), rooms ? rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-item\",\n        onClick: () => {\n          setRoomToDelete(room.room_name);\n          setRoomToUpdate(room.room_name);\n          setIsModifyOpen(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", room.room_name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", room.num_users, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, `${room.room_name}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms-empty\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sorry there are no rooms right now... Come back later \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: \"125px\",\n        width: \"300px\",\n        alignItems: \"center\",\n        margin: \"auto\",\n        paddingTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page-button\",\n        onClick: () => setIsModalOpen(true),\n        children: \" Add New Room \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Rooms, \"U7LE3TC2zTZBhYbIzi9fLURxniU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Rooms/Rooms.jsx"],"names":["React","useEffect","useState","axios","useHistory","RoomItem","Rooms","rooms","setRooms","undefined","error","setError","refresh","setRefresh","isModalOpen","setIsModalOpen","isModifyOpen","setIsModifyOpen","isUpdateOpen","setIsUpdateOpen","newRoomName","setNewRoomName","roomToDelete","setRoomToDelete","roomToUpdate","setRoomToUpdate","history","get","then","response","console","log","data","catch","handleCreateRoom","post","handleDeleteRoom","handleChangeRoom","put","push","toString","e","target","value","map","room","index","room_name","num_users","paddingBottom","width","alignItems","margin","paddingTop"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\n\nimport RoomItem from '../../components/RoomItem/RoomItem';\n\nimport './rooms.css';\n\nexport default function Rooms() {\n  const [rooms, setRooms] = useState(undefined);\n  const [error, setError] = useState(undefined);\n\n  const [refresh, setRefresh] = useState(undefined);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isModifyOpen, setIsModifyOpen] = useState(false);\n  const [isUpdateOpen, setIsUpdateOpen] = useState(false);  \n\n  const [newRoomName, setNewRoomName] = useState('');\n  const [roomToDelete, setRoomToDelete] = useState('');\n  const [roomToUpdate, setRoomToUpdate] = useState('');\n\n  const history = useHistory();\n\n  useEffect(() => {\n    axios.get('https://crow249.herokuapp.com/rooms/list')\n      .then((response) => {\n        console.log(response.data);\n        if (response.data){\n          setRooms(response.data);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error);\n      });\n  }, [refresh])\n\n  const handleCreateRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/create/${newRoomName}`)\n      .then(() => {\n        setIsModalOpen(false);\n        setRefresh(refresh + 1);\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n      })\n  }\n  \n  const handleDeleteRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/delete/${roomToDelete}`)\n      .then(() => {\n        setIsModifyOpen(false);\n        setRefresh(refresh + 1);\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n      })\n  }\n\n  const handleChangeRoom = () => {\n    axios.put(`https://crow249.herokuapp.com/rooms/update/${roomToUpdate}/${newRoomName}`)\n      .then(() => {\n        setIsUpdateOpen(false);\n        setRefresh(refresh + 1);\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n      })\n  }\n\n  return (\n      <>\n        <div className=\"rooms-header\">\n          <h1>Rooms</h1>\n          <button\n            onClick={() => history.push('/')}\n            className=\"button\"\n          >\n            {\"<--\"}Go Back Home\n          </button>\n        </div>\n\n        {error && (\n          <div className=\"rooms-error-box\">\n            <p>{error.toString()}</p>\n          </div>\n        )}\n\n        <div className=\"rooms-list\">\n          {isModalOpen &&\n            <div className=\"create-modal\">\n              <input\n                className=\"room-input\"\n                placeholder=\"Room Name\"\n                value={newRoomName}\n                onChange={(e) => setNewRoomName(e.target.value)}\n              />\n              <div className=\"create-actions\">\n                <button className=\"button\" onClick={handleCreateRoom}>Create New Room</button>\n                <button className=\"button\" onClick={() => setIsModalOpen(false)}> Cancel </button>\n              </div>\n            </div>\n          }\n          {isModifyOpen &&\n            <div className=\"create-modal\">\n              <div className=\"create-actions\">\n                <button className=\"button\" onClick={handleDeleteRoom}> Delete Room </button>\n\t\t<button \n\t\t  className=\"button\" \n\t\t  onClick={() => {\n\t\t    setIsModifyOpen(false);\n\t\t    setIsUpdateOpen(true);\n\t\t  }}\n\t\t> \n\t\t  Change Room Name \n\t\t</button>\n                <button className=\"button\" onClick={() => setIsModifyOpen(false)}> Cancel </button>\n              </div>\n            </div>\n          }\n\t  {isUpdateOpen &&\n\t    <div className=\"create-modal\">\n\t\t<input\n                  className=\"room-input\"\n                  placeholder=\"New Room Name\"\n                  value={newRoomName}\n                  onChange={(e) => setNewRoomName(e.target.value)}\n                />\n\t      <div className=\"create-actions\">\n\t        <button className=\"button\" onClick={handleChangeRoom}> Update Room </button>\n\t\t<button className=\"button\" onClick={() => setIsUpdateOpen(false)}> Cancel </button>\n\t      </div>\n\t    </div>\n\t  }\n          {rooms ? rooms.map((room, index) => (\n\t    <div\n\t      className=\"room-item\"\n\t      key={`${room.room_name}-${index}`}\n\t      onClick={() => {\n                setRoomToDelete(room.room_name);\n\t\tsetRoomToUpdate(room.room_name);\n                setIsModifyOpen(true);\n              }}          \n\t    > \n              <p> {room.room_name} </p>\n              <p> {room.num_users} </p>\n            </div>\n          )) : (\n            <div className=\"rooms-empty\">\n              <p>Sorry there are no rooms right now... Come back later </p>\n            </div>\n          )}\n      </div>\n      <div style={{paddingBottom: \"125px\", width: \"300px\", alignItems: \"center\", margin: \"auto\", paddingTop: \"20px\"}}>\n        <button className=\"page-button\" onClick={() => setIsModalOpen(true)}> Add New Room </button>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}