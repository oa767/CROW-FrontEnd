{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './chatroom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chatroom = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const roomName = localStorage.getItem('roomName');\n  const username = localStorage.getItem('username');\n  const roomCode = localStorage.getItem('roomCode');\n  const privateRoom = JSON.parse(localStorage.getItem('private room'));\n  localStorage.clear();\n  const {\n    params: {\n      roomID\n    }\n  } = match;\n  const [users, setUsers] = useState(undefined);\n  const [rooms, setRooms] = useState(undefined);\n  const [data, setData] = useState(undefined);\n  const history = useHistory();\n\n  const joinRoom = async () => {\n    if (privateRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomCode}/${username}`).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/random/${username}`).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    axios.get(`https://crow249.herokuapp.com/rooms/list/`).then(response => {\n      console.log(response.data);\n      setRooms(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    const join = async () => await joinRoom();\n\n    for (var i = 0; i < rooms.length; ++i) {\n      if (rooms[i]._id.$oid == roomCode) {\n        setData(rooms[i]);\n        console.log(rooms[i]);\n        break;\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content chatroom\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sideBarContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topBar\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"topBarTitle chatroom\",\n          onClick: () => history.push('/'),\n          children: \"Crow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebarContent\",\n          children: data.list_users ? data.list_users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", user, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, `${user}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topBar chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roomName\",\n          children: [\" \", data.room_name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), privateRoom && /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            color: \"white\",\n            marginLeft: \"225px\"\n          },\n          children: [\" \", data._id.$oid, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatWindow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatInput\",\n          placeholder: \"Type a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatroom, \"dp7gt9J/q+VyLlSlCGRgC7llHU0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Chatroom;\nexport default Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx"],"names":["React","useState","useEffect","axios","useHistory","Chatroom","match","roomName","localStorage","getItem","username","roomCode","privateRoom","JSON","parse","clear","params","roomID","users","setUsers","undefined","rooms","setRooms","data","setData","history","joinRoom","post","then","response","console","log","catch","error","get","join","i","length","_id","$oid","push","list_users","map","user","index","room_name","color","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\n\nimport './chatroom.css';\n\nconst Chatroom = ({ match }) => { \n  const roomName = localStorage.getItem('roomName');\n  const username = localStorage.getItem('username');\n  const roomCode = localStorage.getItem('roomCode');\n  const privateRoom = JSON.parse(localStorage.getItem('private room')); \n\n  localStorage.clear();\n\n  const {\n    params: { roomID },\n  } = match;\n\n  const [users, setUsers] = useState(undefined);\n  const [rooms, setRooms] = useState(undefined);\n  const [data, setData] = useState(undefined);\n\n  const history = useHistory();\n\n  const joinRoom = async() => {\n   if (privateRoom) {\n     await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomCode}/${username}`)\n       .then((response) => {\n         console.log(response.data);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n   } else {\n     await axios.post(`https://crow249.herokuapp.com/rooms/join/random/${username}`)\n       .then((response) => {\n         console.log(response.data);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n   }\n   axios.get(`https://crow249.herokuapp.com/rooms/list/`)\n     .then((response) => {\n       console.log(response.data);\n       setRooms(response.data);\n     })\n     .catch(error => {\n       console.log(error);\n     })\n  }\n\n  useEffect(() => {\n    const join = async() => await joinRoom();\n    for (var i = 0; i < rooms.length; ++i) {\n      if (rooms[i]._id.$oid == roomCode) {\n        setData(rooms[i]);\n\tconsole.log(rooms[i]);\n\tbreak;\n      }\n    }\n  }, []);\n\n  return (\n    <div className=\"content chatroom\">\n      <div className=\"sideBarContainer\">\n        <div className=\"topBar\">\n          <button\n\t    className=\"topBarTitle chatroom\"\n\t    onClick={() => history.push('/')}\n          >            \n\t    Crow\n          </button>\n        </div>\n        <div className=\"sidebar\">\n          <div className=\"sidebarContent\">\n            {data.list_users ? data.list_users.map((user, index) => (\n              <div\n                key={`${user}-${index}`}\n              >\n                <h3> {user} </h3>\n              </div>\n            )) : (\n              <h3></h3>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"chatContainer\">\n        <div className=\"topBar chat\">\n          <div className=\"roomName\"> {data.room_name} </div>\n          {privateRoom && <h4 style={{color: \"white\", marginLeft: \"225px\"}}> {data._id.$oid} </h4>}\n        </div>\n        <div className=\"chatWindow\"></div>\n        <div className=\"chatbar\">\n          <input\n\t    className=\"chatInput\"\n            placeholder=\"Type a message\"\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Chatroom;\n"]},"metadata":{},"sourceType":"module"}