{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Usernames/Usernames.jsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from 'react-router-dom';\nimport React from 'react';\nimport './usernames.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Username() {\n  _s();\n\n  const leftUsernames = [\"Crow\", \"Owl\", \"Raven\", \"Eagle\", \"Sparrow\"];\n  const rightUsernames = [\"Penguin\", \"Flamingo\", \"Crane\", \"Hummingbird\", \"Dove\"];\n  const history = useHistory();\n  const roomCode = localStorage.getItem(\"roomCode\");\n  const [username, setUsername] = useState(undefined);\n  const path = '/chatroom/';\n\n  const createUserJoinRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/users/create/${username}`).then(response => {\n      console.log(response.data);\n      setIsModalOpen(false);\n      localStorage.setItem('username', username);\n      localStorage.setItem('privateRoom', false);\n      localStorage.setItem('newUser', true);\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.post(`https://crow249.herokuapp.com/rooms/join/${roomCode}/${username}`).then(response => {\n      console.log(response.data);\n      console.log(path.concat(roomCode));\n      history.push(path.concat(roomCode));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n\n    /* Users on the website can select from a set of 10 different usernames \n    before entering a room. If a user does not select a name before entering \n    a room the website should give them a random one from this set of names. \n    The random user name that is selected must be unique from all other users\n    in the chatroom.\n     \t  \t*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"150px\",\n          paddingBottom: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => history.push('./'),\n          className: \"button usernames\",\n          children: [\"<--\", \"Go Back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"white\",\n          textAlign: \"center\"\n        },\n        children: \" Choose a Username \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonContainer usernames\",\n          children: leftUsernames.map(username => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username-item\",\n            onClick: () => history.push('/chatroom'),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 8\n            }, this)\n          }, `${username}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 6\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonContainer usernames\",\n          children: rightUsernames.map(username => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username-item\",\n            onClick: () => history.push('/chatroom'),\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", username, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, `${username}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(Username, \"mHBQH4Qs4bfS1okunVD8x8pRY+0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Username;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Username\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Usernames/Usernames.jsx"],"names":["useHistory","React","Username","leftUsernames","rightUsernames","history","roomCode","localStorage","getItem","username","setUsername","useState","undefined","path","createUserJoinRoom","axios","post","then","response","console","log","data","setIsModalOpen","setItem","catch","error","concat","push","paddingTop","paddingBottom","color","textAlign","map"],"mappings":"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","sourcesContent":["import {useHistory} from 'react-router-dom';\nimport React from 'react';\n\nimport './usernames.css';\n\nexport default function Username() {\n  const leftUsernames = [\"Crow\", \"Owl\", \"Raven\", \"Eagle\", \"Sparrow\"];\n  const rightUsernames = [\"Penguin\", \"Flamingo\", \"Crane\", \"Hummingbird\", \"Dove\"];\n\n  const history = useHistory();\n\n  const roomCode = localStorage.getItem(\"roomCode\");\n  const [username, setUsername] = useState(undefined);\n\n  const path = '/chatroom/';\n\n  const createUserJoinRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/users/create/${username}`)\n      .then((response) => {\n        console.log(response.data);\n        setIsModalOpen(false);\n        localStorage.setItem('username', username);\n        localStorage.setItem('privateRoom', false);\n        localStorage.setItem('newUser', true);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n    axios.post(`https://crow249.herokuapp.com/rooms/join/${roomCode}/${username}`)\n      .then((response) => {\n        console.log(response.data);\n        console.log(path.concat(roomCode))\n        history.push(path.concat(roomCode));\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  return (\n\t  /* Users on the website can select from a set of 10 different usernames \n\t  before entering a room. If a user does not select a name before entering \n\t  a room the website should give them a random one from this set of names. \n\t  The random user name that is selected must be unique from all other users\n\t  in the chatroom.\n    \t  \t*/\n    <>\n      <div style={{paddingTop: \"150px\", paddingBottom: \"20px\"}}>\n        <button\n          onClick={() => history.push('./')}\n          className=\"button usernames\"\n        >\n          {\"<--\"}Go Back\n        </button>\n      </div>\n\n      <h3 style={{color: \"white\", textAlign: \"center\"}}> Choose a Username </h3>\n\n      <div className=\"listContainer\">\n        <div className=\"buttonContainer usernames\">\n\t  {leftUsernames.map((username) => (\n\t    <div \n\t      className=\"username-item\"\n\t      key={`${username}`}\n\t      onClick={() => history.push('/chatroom')}\n\t    >\n\t      <p> {username} </p>\n\t    </div>\n          ))}\n        </div>\t\n\t<div className=\"buttonContainer usernames\">\n          {rightUsernames.map((username) => (\n            <div\n              className=\"username-item\"\n              key={`${username}`}\n              onClick={() => history.push('/chatroom')}\n            >\n              <p> {username} </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}