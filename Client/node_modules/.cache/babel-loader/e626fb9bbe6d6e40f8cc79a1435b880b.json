{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Rooms/Rooms.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport RoomItem from '../../components/RoomItem/RoomItem';\nimport './rooms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Rooms() {\n  _s();\n\n  const [rooms, setRooms] = useState(undefined);\n  const [error, setError] = useState(undefined);\n  const [refresh, setRefresh] = useState(undefined);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newRoomName, setNewRoomName] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    axios.get('https://crow249.herokuapp.com/rooms/list').then(response => {\n      console.log(response.data);\n\n      if (response.data) {\n        setRooms(response.data);\n      }\n    }).catch(error => {\n      console.log(error);\n      setError(error);\n    });\n  }, [refresh]);\n\n  const handleCreateRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/create/${newRoomName}`).then(() => {\n      setIsModalOpen(false);\n      setRefresh(refresh + 1);\n    }).catch(error => {\n      setError(error);\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"room-input\",\n        placeholder: \"Room Name\",\n        value: newRoomName,\n        onChange: e => setNewRoomName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleCreateRoom,\n          children: \"Create New Room\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => setIsModalOpen(false),\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push('/'),\n        className: \"button\",\n        children: [\"<--\", \"Go Back Home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-error-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-list\",\n      children: rooms ? rooms.map((room, index) => /*#__PURE__*/_jsxDEV(RoomItem, {\n        name: room.room_name,\n        userCount: room.num_users\n      }, `${room.room_name}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms-empty\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sorry there are no rooms right now... Come back later \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: \"padding-bottom: 125px\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page-button\",\n        onClick: () => setIsModalOpen(true),\n        children: \" Add New Room \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Rooms, \"XgDHeKlV/FjB0FvisCM6LYVwgoU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Rooms/Rooms.jsx"],"names":["React","useEffect","useState","axios","useHistory","RoomItem","Rooms","rooms","setRooms","undefined","error","setError","refresh","setRefresh","isModalOpen","setIsModalOpen","newRoomName","setNewRoomName","history","get","then","response","console","log","data","catch","handleCreateRoom","post","e","target","value","push","toString","map","room","index","room_name","num_users"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\n\nimport RoomItem from '../../components/RoomItem/RoomItem';\n\nimport './rooms.css';\n\nexport default function Rooms() {\n  const [rooms, setRooms] = useState(undefined);\n  const [error, setError] = useState(undefined);\n\n  const [refresh, setRefresh] = useState(undefined);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newRoomName, setNewRoomName] = useState('');\n\n  const history = useHistory();\n\n  useEffect(() => {\n    axios.get('https://crow249.herokuapp.com/rooms/list')\n      .then((response) => {\n        console.log(response.data);\n        if (response.data){\n          setRooms(response.data);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error);\n      });\n  }, [refresh])\n\n  const handleCreateRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/create/${newRoomName}`)\n      .then(() => {\n        setIsModalOpen(false);\n        setRefresh(refresh + 1);\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n      })\n  }\n\n  return (\n    <div className=\"content\">\n      {isModalOpen && \n        <div className=\"create-modal\">\n          <input\n            className=\"room-input\"\n            placeholder=\"Room Name\"\n            value={newRoomName}\n            onChange={(e) => setNewRoomName(e.target.value)}\n          />\n          <div className=\"create-actions\">\n            <button className=\"button\" onClick={handleCreateRoom}>Create New Room</button>\n            <button className=\"button\" onClick={() => setIsModalOpen(false)}> Cancel </button>\n          </div>\n        </div>\n      }\n\n      <div className=\"rooms-header\">\n        <h1>Rooms</h1>\n        <button\n          onClick={() => history.push('/')}\n          className=\"button\"\n        >\n          {\"<--\"}Go Back Home\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"rooms-error-box\">\n          <p>{error.toString()}</p>\n        </div>\n      )}\n\n      <div className=\"rooms-list\">\n        {rooms ? rooms.map((room, index) => (\n          <RoomItem\n            key={`${room.room_name}-${index}`}\n            name={room.room_name}\n            userCount={room.num_users}\n          />\n        )) : (\n          <div className=\"rooms-empty\">\n            <p>Sorry there are no rooms right now... Come back later </p>\n          </div>\n        )}\n      </div>\n      <div style=\"padding-bottom: 125px\">\n        <button className=\"page-button\" onClick={() => setIsModalOpen(true)}> Add New Room </button>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}