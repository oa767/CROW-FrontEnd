{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './chatroom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chatroom() {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const roomID = params.roomID;\n  const [data, setData] = useState(undefined);\n  const [refresh, setRefresh] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useState(JSON.parse(localStorage.getItem('privateRoom')));\n  const [isNewUser, setIsNewUser] = useState(JSON.parse(localStorage.getItem('newUser')));\n\n  const getRooms = () => {\n    if (isPrivate && isNewUser) return axios.get('https://crow249.herokuapp.com/rooms/list');\n  };\n\n  useEffect(async () => {\n    const rooms = await getRooms().catch(error => console.log(error));\n\n    for (var i = 0; i < rooms.data.length; ++i) {\n      if (rooms.data[i]._id.$oid == roomID) {\n        setData(rooms.data[i]);\n        console.log(rooms.data[i]);\n        setIsLoading(false);\n        break;\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content chatroom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideBarContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topBar\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"topBarTitle chatroom\",\n            onClick: () => history.push('/'),\n            children: \"Crow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebarContent\",\n            children: data.list_users ? data.list_users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", user, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)\n            }, `${user}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topBar chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomName\",\n            children: [\" \", data.room_name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: \"white\",\n              marginLeft: \"225px\"\n            },\n            children: [\" \", data._id.$oid, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWindow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbar\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chatInput\",\n            placeholder: \"Type a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chatroom, \"Or90VgsUWeO9fUWzjWcgJxLffDQ=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx"],"names":["React","useState","useEffect","axios","useHistory","useParams","Chatroom","history","params","roomID","data","setData","undefined","refresh","setRefresh","isLoading","setIsLoading","isPrivate","setIsPrivate","JSON","parse","localStorage","getItem","isNewUser","setIsNewUser","getRooms","get","rooms","catch","error","console","log","i","length","_id","$oid","push","list_users","map","user","index","room_name","color","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport './chatroom.css';\n\nexport default function Chatroom() { \n  const history = useHistory();\n  const params = useParams();\n  const roomID = params.roomID;\n\n  const [data, setData] = useState(undefined);\n  const [refresh, setRefresh] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useState(JSON.parse(localStorage.getItem('privateRoom')));\n  const [isNewUser, setIsNewUser] = useState(JSON.parse(localStorage.getItem('newUser')));\n\n  const getRooms = () => {\n    if (isPrivate && isNewUser)\n    return axios.get('https://crow249.herokuapp.com/rooms/list');\n  }\n\n  useEffect(async() => {\n    const rooms = await getRooms()\n\t\t\t.catch((error) => console.log(error));\n    for (var i = 0; i < rooms.data.length; ++i) {\n      if (rooms.data[i]._id.$oid == roomID) {\n        setData(rooms.data[i]);\n        console.log(rooms.data[i]);\n        setIsLoading(false);\n        break;\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      {!isLoading &&\n        <div className=\"content chatroom\">\n          <div className=\"sideBarContainer\">\n            <div className=\"topBar\">\n              <button\n\t        className=\"topBarTitle chatroom\"\n\t        onClick={() => history.push('/')}\n              >            \n\t        Crow\n              </button>\n            </div>\n            <div className=\"sidebar\">\n              <div className=\"sidebarContent\">\n                {data.list_users ? data.list_users.map((user, index) => (\n                  <div\n                    key={`${user}-${index}`}\n                  >\n                    <h3> {user} </h3>\n                  </div>\n                )) : (\n                  <h3></h3>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"chatContainer\">\n            <div className=\"topBar chat\">\n              <div className=\"roomName\"> {data.room_name} </div>\n              <h4 style={{color: \"white\", marginLeft: \"225px\"}}> {data._id.$oid} </h4>\n            </div>\n            <div className=\"chatWindow\"></div>\n            <div className=\"chatbar\">\n              <input\n\t        className=\"chatInput\"\n                placeholder=\"Type a message\"\n              />\n            </div>\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}