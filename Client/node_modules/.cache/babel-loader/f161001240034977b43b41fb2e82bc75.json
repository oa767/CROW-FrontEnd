{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Rooms/Rooms.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport RoomItem from '../../components/RoomItem/RoomItem';\nimport './rooms.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Rooms() {\n  _s();\n\n  const [rooms, setRooms] = useState(undefined);\n  const [error, setError] = useState(undefined);\n  const [refresh, setRefresh] = useState(undefined);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\n  const [newRoomName, setNewRoomName] = useState('');\n  const [roomToDelete, setRoomToDelete] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    axios.get('https://crow249.herokuapp.com/rooms/list').then(response => {\n      console.log(response.data);\n\n      if (response.data) {\n        setRooms(response.data);\n      }\n    }).catch(error => {\n      console.log(error);\n      setError(error);\n    });\n  }, [refresh]);\n\n  const handleCreateRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/create/${newRoomName}`).then(() => {\n      setIsModalOpen(false);\n      setRefresh(refresh + 1);\n    }).catch(error => {\n      setError(error);\n      console.log(error);\n    });\n  };\n\n  const handleDeleteRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/delete/${roomToDelete}`).then(() => {\n      setIsDeleteOpen(false);\n      setRefresh(refresh + 1);\n    }).catch(error => {\n      setError(error);\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push('/'),\n        className: \"button\",\n        children: [\"<--\", \"Go Back Home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-error-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rooms-list\",\n      children: [isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"room-input\",\n          placeholder: \"Room Name\",\n          value: newRoomName,\n          onChange: e => setNewRoomName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleCreateRoom,\n            children: \"Create New Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => setIsModalOpen(false),\n            children: \" Cancel \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), isDeleteOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleDeleteRoom,\n            children: \" Delete Room \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => setIsDeleteOpen(false),\n            children: \" Cancel \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), rooms ? rooms.map((room, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-item\",\n        onClick: () => {\n          setRoomToDelete(room.room_name);\n          setIsDeleteOpen(true);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", room.room_name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", room.num_users, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, `${room.room_name}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rooms-empty\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sorry there are no rooms right now... Come back later \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: \"125px\",\n        width: \"300px\",\n        alignItems: \"center\",\n        margin: \"auto\",\n        paddingTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page-button\",\n        onClick: () => setIsModalOpen(true),\n        children: \" Add New Room \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Rooms, \"AYu0rRycWnwSRD4Uqf/91zJoQQw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Rooms;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Rooms/Rooms.jsx"],"names":["React","useEffect","useState","axios","useHistory","RoomItem","Rooms","rooms","setRooms","undefined","error","setError","refresh","setRefresh","isModalOpen","setIsModalOpen","isDeleteOpen","setIsDeleteOpen","newRoomName","setNewRoomName","roomToDelete","setRoomToDelete","history","get","then","response","console","log","data","catch","handleCreateRoom","post","handleDeleteRoom","push","toString","e","target","value","map","room","index","room_name","num_users","paddingBottom","width","alignItems","margin","paddingTop"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\n\nimport RoomItem from '../../components/RoomItem/RoomItem';\n\nimport './rooms.css';\n\nexport default function Rooms() {\n  const [rooms, setRooms] = useState(undefined);\n  const [error, setError] = useState(undefined);\n\n  const [refresh, setRefresh] = useState(undefined);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isDeleteOpen, setIsDeleteOpen] = useState(false);\n  const [newRoomName, setNewRoomName] = useState('');\n  const [roomToDelete, setRoomToDelete] = useState('');\n\n  const history = useHistory();\n\n  useEffect(() => {\n    axios.get('https://crow249.herokuapp.com/rooms/list')\n      .then((response) => {\n        console.log(response.data);\n        if (response.data){\n          setRooms(response.data);\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        setError(error);\n      });\n  }, [refresh])\n\n  const handleCreateRoom = () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/create/${newRoomName}`)\n      .then(() => {\n        setIsModalOpen(false);\n        setRefresh(refresh + 1);\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n      })\n  }\n  \n  const handleDeleteRoom= () => {\n    axios.post(`https://crow249.herokuapp.com/rooms/delete/${roomToDelete}`)\n      .then(() => {\n        setIsDeleteOpen(false);\n        setRefresh(refresh + 1);\n      })\n      .catch(error => {\n        setError(error);\n        console.log(error);\n      })\n  }\n\n  return (\n      <>\n        <div className=\"rooms-header\">\n          <h1>Rooms</h1>\n          <button\n            onClick={() => history.push('/')}\n            className=\"button\"\n          >\n            {\"<--\"}Go Back Home\n          </button>\n        </div>\n\n        {error && (\n          <div className=\"rooms-error-box\">\n            <p>{error.toString()}</p>\n          </div>\n        )}\n\n        <div className=\"rooms-list\">\n          {isModalOpen &&\n            <div className=\"create-modal\">\n              <input\n                className=\"room-input\"\n                placeholder=\"Room Name\"\n                value={newRoomName}\n                onChange={(e) => setNewRoomName(e.target.value)}\n              />\n              <div className=\"create-actions\">\n                <button className=\"button\" onClick={handleCreateRoom}>Create New Room</button>\n                <button className=\"button\" onClick={() => setIsModalOpen(false)}> Cancel </button>\n              </div>\n            </div>\n          }\n          {isDeleteOpen &&\n            <div className=\"create-modal\">\n              <div className=\"create-actions\">\n                <button className=\"button\" onClick={handleDeleteRoom}> Delete Room </button>\n                <button className=\"button\" onClick={() => setIsDeleteOpen(false)}> Cancel </button>\n              </div>\n            </div>\n          }\n          {rooms ? rooms.map((room, index) => (\n\t    <div\n\t      className=\"room-item\"\n\t      key={`${room.room_name}-${index}`}\n\t      onClick={() => {\n                setRoomToDelete(room.room_name);\n                setIsDeleteOpen(true);\n              }}          \n\t    > \n              <p> {room.room_name} </p>\n              <p> {room.num_users} </p>\n            </div>\n          )) : (\n            <div className=\"rooms-empty\">\n              <p>Sorry there are no rooms right now... Come back later </p>\n            </div>\n          )}\n      </div>\n      <div style={{paddingBottom: \"125px\", width: \"300px\", alignItems: \"center\", margin: \"auto\", paddingTop: \"20px\"}}>\n        <button className=\"page-button\" onClick={() => setIsModalOpen(true)}> Add New Room </button>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}