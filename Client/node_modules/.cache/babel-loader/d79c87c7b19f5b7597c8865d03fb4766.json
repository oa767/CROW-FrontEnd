{"ast":null,"code":"var _jsxFileName = \"/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './chatroom.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chatroom() {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const roomID = params.roomID;\n  const username = localStorage.getItem('username');\n  const [data, setData] = useState(undefined);\n  const [users, setUsers] = useState(undefined);\n  const [refresh, setRefresh] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useState(JSON.parse(localStorage.getItem('privateRoom')));\n  const [isNewUser, setIsNewUser] = useState(JSON.parse(localStorage.getItem('newUser')));\n  const [isNewRoom, setIsNewRoom] = useState(true);\n\n  const joinRoom = async () => {\n    if (isPrivate && isNewUser && isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`).then(response => {\n        console.log(response.data);\n        setIsNewUser(false);\n        localStorage.setItem('newUser', false);\n        setIsNewRoom(false);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else if (isPrivate && isNewUser && !isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`).then(response => {\n        console.log(response.data);\n        setIsNewUser(false);\n        localStorage.setItem('newUser', false);\n        setRefresh(refresh + 1);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  };\n\n  const getRooms = async () => {\n    await axios.get('https://crow249.herokuapp.com/rooms/list').then(response => {\n      console.log(response.data);\n      return response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(async () => {\n    if (isLoading) {\n      await joinRoom().catch(error => {\n        console.log(error);\n      });\n    }\n\n    await axios.get(`https://crow249.herokuapp.com/users/list/${data.room_name}`).then(response => {\n      console.log(response.data);\n      setUsers(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [refresh]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content chatroom\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sideBarContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topBar\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"topBarTitle chatroom\",\n            onClick: () => history.push('/'),\n            children: \"Crow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebarContent\",\n            children: users ? users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", user, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)\n            }, `${user}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topBar chat\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"roomName\",\n            children: [\" \", data.room_name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: \"white\",\n              marginLeft: \"225px\"\n            },\n            children: [\" \", data._id.$oid, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWindow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbar\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"chatInput\",\n            placeholder: \"Type a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Chatroom, \"M5VcAv89SVD6vZvdMXWxgUVr8pE=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Chatroom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"sources":["/Users/randy/CROW-FrontEnd/src/pages/Chatroom/Chatroom.jsx"],"names":["React","useState","useEffect","axios","useHistory","useParams","Chatroom","history","params","roomID","username","localStorage","getItem","data","setData","undefined","users","setUsers","refresh","setRefresh","isLoading","setIsLoading","isPrivate","setIsPrivate","JSON","parse","isNewUser","setIsNewUser","isNewRoom","setIsNewRoom","joinRoom","post","then","response","console","log","setItem","catch","error","getRooms","get","room_name","push","map","user","index","color","marginLeft","_id","$oid"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport './chatroom.css';\n\nexport default function Chatroom() { \n  const history = useHistory();\n  const params = useParams();\n  const roomID = params.roomID;\n\n  const username = localStorage.getItem('username');\n\n  const [data, setData] = useState(undefined);\n  const [users, setUsers] = useState(undefined);\n  const [refresh, setRefresh] = useState(undefined);\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [isPrivate, setIsPrivate] = useState(JSON.parse(localStorage.getItem('privateRoom')));\n  const [isNewUser, setIsNewUser] = useState(JSON.parse(localStorage.getItem('newUser')));\n  const [isNewRoom, setIsNewRoom] = useState(true);\n\n  const joinRoom = async() => {\n    if (isPrivate && isNewUser && isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`)\n        .then((response) => {\n          console.log(response.data);\n\t  setIsNewUser(false);\n\t  localStorage.setItem('newUser', false);\n\t  setIsNewRoom(false);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n    } else if (isPrivate && isNewUser && !isNewRoom) {\n      await axios.post(`https://crow249.herokuapp.com/rooms/join/${roomID}/${username}`)\n        .then((response) => {\n          console.log(response.data);\n\t  setIsNewUser(false);\n          localStorage.setItem('newUser', false);\n\t  setRefresh(refresh + 1);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n    }\n  }\n  \n  const getRooms = async() => {\n    await axios.get('https://crow249.herokuapp.com/rooms/list')\n      .then((response) => {\n\tconsole.log(response.data);\n\treturn response.data;\n      })\n      .catch(error => {\n\tconsole.log(error);\n      })\n  }\n\n  \n\n  useEffect(async() => {\n    if (isLoading) {\n      await joinRoom()\n        .catch((error) => {\n\t  console.log(error);\n\t})\n    }\n    await axios.get(`https://crow249.herokuapp.com/users/list/${data.room_name}`)\n      .then((response) => {\n\tconsole.log(response.data);\n\tsetUsers(response.data);\n      })\n      .catch(error => {\n\tconsole.log(error);\n      })      \n  }, [refresh]);\n\n  return (\n    <>\n      {!isLoading &&\n        <div className=\"content chatroom\">\n          <div className=\"sideBarContainer\">\n            <div className=\"topBar\">\n              <button\n\t        className=\"topBarTitle chatroom\"\n\t        onClick={() => history.push('/')}\n              >            \n\t        Crow\n              </button>\n            </div>\n            <div className=\"sidebar\">\n              <div className=\"sidebarContent\">\n                {users ? users.map((user, index) => (\n                  <div\n                    key={`${user}-${index}`}\n                  >\n                    <h3> {user} </h3>\n                  </div>\n                )) : (\n                  <h3></h3>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"chatContainer\">\n            <div className=\"topBar chat\">\n              <div className=\"roomName\"> {data.room_name} </div>\n              <h4 style={{color: \"white\", marginLeft: \"225px\"}}> {data._id.$oid} </h4>\n            </div>\n            <div className=\"chatWindow\"></div>\n            <div className=\"chatbar\">\n              <input\n\t        className=\"chatInput\"\n                placeholder=\"Type a message\"\n              />\n            </div>\n          </div>\n        </div>\n      }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}